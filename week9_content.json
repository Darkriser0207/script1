[
  {
    "question": "Arun wants to calculate the age gap between the grandfather and the son and determine the father's age after 5 years.",
    "explanation": "--NA--",
    "answer": "// You are using Java\nclass GrandFather {\n    private int gfage;\n    public void setGrandfatherAge(int gfage) {\n        this.gfage = gfage;\n    }\n    public int getGrandfatherAge() {\n        return gfage;\n    }\n}\n\nclass Father extends GrandFather {\n    private int fage;\n    public void setFatherAge(int fage) {\n        this.fage = fage;\n    }\n    public int getFatherAge() {\n        return fage;\n    }\n    public int calculateFatherAgeAfter5Years() {\n        return getFatherAge() + 5;\n    }\n}\n\nclass Son extends Father {\n    private int sage;\n    public void setSonAge(int sage) {\n        this.sage = sage;\n    }\n    public int getSonAge() {\n        return sage;\n    }\n    public int calculateGrandfatherSonAgeDifference() {\n        return getGrandfatherAge() - getSonAge();\n    }\n}"
  },
  {
    "question": "Sharon, a software developer, is working on a library system program.",
    "explanation": "--NA--",
    "answer": "// You are using Java\nclass Book {\n    String title, author;\n    public Book(String title, String author) {\n        this.title = title;\n        this.author = author;\n    }\n}\n\nclass Fiction extends Book {\n    String genre;\n    public Fiction(String title, String author, String genre) {\n        super(title, author);\n        this.genre = genre;\n    }\n}\n\nclass Fantasy extends Fiction {\n    int daysLate;\n    public Fantasy(String title, String author, String genre, int daysLate) {\n        super(title, author, genre);\n        this.daysLate = daysLate;\n    }\n    public double calculateLateFee() {\n        return daysLate * 0.5;\n    }\n}"
  },
  {
    "question": "Dinesh, a dedicated fitness enthusiast, decides to track his daily running sessions using a fitness app. He uses the app to record his running duration and speed. Write a program that takes his running duration and speed as input and calculates the calories burned during the run.",
    "explanation": "--NA--",
    "answer": "// You are using Java\nimport java.util.Scanner;\nclass Exercise {\n    private double duration;\n    public Exercise(double duration) {\n        this.duration = duration;\n    }\n    public double getDuration() {\n        return duration;\n    }\n}\n\nclass Cardio extends Exercise {\n    public Cardio(double duration) {\n        super(duration);\n    }\n}\n\nclass Running extends Cardio {\n    private double speed;\n    public Running(double duration, double speed) {\n        super(duration);\n        this.speed = speed;\n    }\n    public double calculateCaloriesBurned() {\n        return 7 * (getDuration() / 60) * 3.5 * (speed / 3);\n    }\n}\n\nclass Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        double d = sc.nextDouble();\n        double s = sc.nextDouble();\n        Running r = new Running(d, s);\n        System.out.printf(\"%.2f\\n\", r.calculateCaloriesBurned());\n    }\n}"
  },
  {
    "question": "Maria, a software developer, is building a grading automation system for Computer Science students. The program calculates the Grade Point Average (GPA) and determines class standing based on credits completed.",
    "explanation": "--NA--",
    "answer": "// You are using Java\nimport java.util.Scanner;\nclass Student {\n    String name;\n    int age;\n    public Student(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n    public void displayInfo() {\n        System.out.println(\"Name: \" + name);\n        System.out.println(\"Age: \" + age);\n    }\n}\nclass Undergraduate extends Student {\n    double creditsCompleted;\n    public Undergraduate(String name, int age, double creditsCompleted) {\n        super(name, age);\n        this.creditsCompleted = creditsCompleted;\n    }\n    public void calculateGPA() {\n        System.out.printf(\"GPA: %.1f\\n\", (4 * (creditsCompleted / 120)));\n    }\n    public void getClassStanding() {\n        if (creditsCompleted >= 0 && creditsCompleted < 30) {\n            System.out.println(\"Class Standing: Freshman\");\n        } else if (creditsCompleted >= 30 && creditsCompleted < 60) {\n            System.out.println(\"Class Standing: Sophomore\");\n        } else if (creditsCompleted >= 60 && creditsCompleted < 90) {\n            System.out.println(\"Class Standing: Junior\");\n        } else {\n            System.out.println(\"Class Standing: Senior\");\n        }\n    }\n    public void displayInfo() {\n        super.displayInfo();\n        System.out.println(\"Credits Completed: \" + creditsCompleted);\n        calculateGPA();\n        getClassStanding();\n    }\n}\nclass ComputerScienceMajor extends Undergraduate {\n    public ComputerScienceMajor(String name, int age, double creditsCompleted) {\n        super(name, age, creditsCompleted);\n    }\n    public void displayInfo() {\n        super.displayInfo();\n    }\n}\nclass Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        String name = sc.nextLine();\n        int age = sc.nextInt();\n        double creditsCompleted = sc.nextDouble();\n        ComputerScienceMajor csm = new ComputerScienceMajor(name, age, creditsCompleted);\n        csm.displayInfo();\n        sc.close();\n    }\n}"
  },
  {
    "question": "A painter needs to determine the cost to paint different shapes based on their surface area.",
    "explanation": "--NA--",
    "answer": "// You are using Java\nimport java.util.Scanner;\nclass Shape {\n    String type;\n    double radius;\n    public Shape(String type, double radius) {\n        this.type = type;\n        this.radius = radius;\n    }\n}\nclass Area extends Shape {\n    public Area(String type, double radius) {\n        super(type, radius);\n    }\n    public double getArea() {\n        return 4 * 3.14 * radius * radius;\n    }\n}\nclass Cost extends Area {\n    double cost;\n    public Cost(String type, double radius, double cost) {\n        super(type, radius);\n        this.cost = cost;\n    }\n    public double calculateCost() {\n        return getArea() * cost;\n    }\n}\nclass Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        String type = sc.nextLine();\n        double radius = sc.nextDouble();\n        double cost = sc.nextDouble();\n        Cost c = new Cost(type, radius, cost);\n        if (type.equals(\"Sphere\")) {\n            System.out.printf(\"Area of Sphere is: %.2f\\n\", c.getArea());\n            System.out.printf(\"Cost to paint the shape is: %.2f\\n\", c.calculateCost());\n        } else {\n            System.out.println(\"Invalid type\");\n        }\n    }\n}"
  },
  {
    "question": "A new airline, Boeing747, needs to calculate its total revenue based on ticket cost and seat availability.",
    "explanation": "--NA--",
    "answer": "// You are using Java\nimport java.util.Scanner;\nclass Airline {\n    double cost;\n    public Airline(double cost) {\n        this.cost = cost;\n    }\n}\nclass Indigo extends Airline {\n    int seatAvailability;\n    public Indigo(double cost, int seatAvailability) {\n        super(cost);\n        this.seatAvailability = seatAvailability;\n    }\n}\nclass Boeing747 extends Indigo {\n    public Boeing747(double cost, int seatAvailability) {\n        super(cost, seatAvailability);\n    }\n    public void calculateTotalRevenue() {\n        System.out.printf(\"Total Revenue: Rs. %.1f\\n\", cost * seatAvailability);\n    }\n    public void display() {\n        System.out.printf(\"Ticket Cost: Rs. %.1f\\n\", cost);\n        System.out.println(\"Seat Availability: \" + seatAvailability + \" seats\");\n        calculateTotalRevenue();\n    }\n}\nclass Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        double cost = sc.nextDouble();\n        int seatAvailability = sc.nextInt();\n        Boeing747 b = new Boeing747(cost, seatAvailability);\n        b.display();\n    }\n}"
  },
  {
    "question": "In an organization, employees have different roles and salaries. The task is to calculate the net salary of employees based on their role, considering tax deductions and additional benefits.",
    "explanation": "--NA--",
    "answer": "// You are using Java\nimport java.util.Scanner;\nclass Employee {\n    String name;\n    double baseSalary;\n    public Employee(String name, double baseSalary) {\n        this.name = name;\n        this.baseSalary = baseSalary;\n    }\n    public double calculateNetSalary() {\n        return baseSalary;\n    }\n}\nclass Engineer extends Employee {\n    double bonus;\n    public Engineer(String name, double baseSalary, double bonus) {\n        super(name, baseSalary);\n        this.bonus = bonus;\n    }\n    public double calculateNetSalary() {\n        double grossSalary = baseSalary + bonus;\n        double tax = 0.1 * grossSalary;\n        double benefit = 100;\n        return grossSalary - tax + benefit;\n    }\n}\nclass SoftwareEngineer extends Engineer {\n    public SoftwareEngineer(String name, double baseSalary, double bonus) {\n        super(name, baseSalary, bonus);\n    }\n    public double calculateNetSalary() {\n        double grossSalary = baseSalary + bonus;\n        double tax = 0.15 * grossSalary;\n        double benefit = 150;\n        return grossSalary - tax + benefit;\n    }\n}\nclass Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        String name = sc.nextLine();\n        double baseSalary = sc.nextDouble();\n        double bonus = sc.nextDouble();\n        int choice = sc.nextInt();\n        if (choice == 1) {\n            Engineer e = new Engineer(name, baseSalary, bonus);\n            System.out.printf(\"%.1f\\n\", e.calculateNetSalary());\n        } else if (choice == 2) {\n            SoftwareEngineer se = new SoftwareEngineer(name, baseSalary, bonus);\n            System.out.printf(\"%.1f\\n\", se.calculateNetSalary());\n        } else {\n            System.out.println(\"Invalid\");\n        }\n    }\n}"
  }
]
