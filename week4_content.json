[
  {
    "question": "Marina wants to determine whether the sum and difference of two numbers are prime or not. She needs a program that takes two integers as input, calculates their sum and difference, and checks if both are prime numbers.",
    "explanation": "--NA--",
    "answer": "class PrimeDecider {\n    private int num1;\n    private int num2;\n\n    public PrimeDecider(int a, int b) {\n        num1 = a;\n        num2 = b;\n    }\n\n    public PrimeDecider() {\n        num1 = 0;\n        num2 = 0;\n    }\n\n    public PrimeDecider(int num) {\n        num1 = num;\n        num2 = num;\n    }\n\n    private boolean isPrime(int num) {\n        if (num < 2) return false;\n        if (num == 2 || num == 3) return true;\n        if (num % 2 == 0 || num % 3 == 0) return false;\n        int sqrtNum = (int) Math.sqrt(num) + 1;\n        for (int i = 5; i <= sqrtNum; i += 6) {\n            if (num % i == 0 || num % (i + 2) == 0)\n                return false;\n        }\n        return true;\n    }\n\n    public void decide() {\n        int sum = num1 + num2;\n        int difference = Math.abs(num1 - num2);\n\n        System.out.println(\"Sum: \" + sum + \", Difference: \" + difference);\n\n        if (isPrime(sum)) {\n            System.out.println(sum + \" is prime\");\n        } else {\n            System.out.println(sum + \" is not prime\");\n        }\n\n        if (isPrime(difference)) {\n            System.out.println(difference + \" is prime\");\n        } else {\n            System.out.println(difference + \" is not prime\");\n        }\n    }\n}"
  },
  {
    "question": "Anu is tasked with creating a program to determine whether a given number or a range of numbers falls into one of two categories: prime numbers or Fibonacci numbers. There are two constructors to achieve this task.",
    "explanation": "--NA--",
    "answer": "class PrimeFibonacciChecker {\n    private int number;\n    private int start;\n    private int end;\n    private String type;\n\n    public PrimeFibonacciChecker(int numberInput, String typeInput) {\n        number = numberInput;\n        type = typeInput;\n        checkNumberType();\n    }\n\n    public PrimeFibonacciChecker(int startInput, int endInput, String typeInput) {\n        start = startInput;\n        end = endInput;\n        type = typeInput;\n        checkRangeType();\n    }\n\n    private void checkNumberType() {\n        if (type.equals(\"prime\")) {\n            if (isPrime(number)) {\n                System.out.println(number + \" is a prime number.\");\n            } else {\n                System.out.println(number + \" is not a prime number.\");\n            }\n        } else if (type.equals(\"fibonacci\")) {\n            if (isFibonacci(number)) {\n                System.out.println(number + \" is part of the Fibonacci series.\");\n            } else {\n                System.out.println(number + \" is not part of the Fibonacci series.\");\n            }\n        } else {\n            System.out.println(\"Invalid type specified.\");\n        }\n    }\n\n    private void checkRangeType() {\n        if (type.equals(\"prime\")) {\n            String primeNumbers = \"Prime numbers in the range \" + start + \" to \" + end + \": [\";\n            int count = 0;\n            for (int i = start; i <= end; i++) {\n                if (isPrime(i)) {\n                    if (count > 0) {\n                        primeNumbers += \", \";\n                    }\n                    primeNumbers += i;\n                    count++;\n                }\n            }\n            primeNumbers += \"]\";\n            System.out.println(primeNumbers);\n        } else if (type.equals(\"fibonacci\")) {\n            String fibonacciNumbers = \"Fibonacci numbers in the range \" + start + \" to \" + end + \": [\";\n            int count = 0;\n            for (int i = start; i <= end; i++) {\n                if (isFibonacci(i)) {\n                    if (count > 0) {\n                        fibonacciNumbers += \", \";\n                    }\n                    fibonacciNumbers += i;\n                    count++;\n                }\n            }\n            fibonacciNumbers += \"]\";\n            System.out.println(fibonacciNumbers);\n        } else {\n            System.out.println(\"Invalid type specified.\");\n        }\n    }\n\n    private boolean isPrime(int num) {\n        if (num <= 1) {\n            return false;\n        }\n        if (num <= 3) {\n            return true;\n        }\n        if (num % 2 == 0 || num % 3 == 0) {\n            return false;\n        }\n        for (int i = 5; i * i <= num; i += 6) {\n            if (num % i == 0 || num % (i + 2) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    private boolean isFibonacci(int num) {\n        if (num <= 1) {\n            return true;\n        }\n        int prev = 0;\n        int current = 1;\n        while (current < num) {\n            int next = prev + current;\n            prev = current;\n            current = next;\n        }\n        return current == num;\n    }\n}"
  },
  {
    "question": "Ravi, a marathon enthusiast, requires a program to effortlessly convert distances between miles and kilometers to maintain consistent records.",
    "explanation": "--NA--",
    "answer": "// You are using Java\nimport java.util.Scanner;\nclass MarathonRunner\n{\n    double n;\n    char type;\n    public MarathonRunner(double n,char type)\n    {\n        this.n=n;\n        this.type=type;\n    }\n    public void convert()\n    {\n        if (type=='m')\n        {\n            System.out.printf(\"%.2f\\n\",n*1.60934);\n        }\n        else if(type=='k')\n        {\n            System.out.printf(\"%.2f\\n\",n*1.2);\n        }\n        else\n        {\n            System.out.println(\"Invalid input for unit\");\n        }\n    }\n}\nclass Main\n{\n    public static void main(String[] args)\n    {\n        Scanner sc=new Scanner(System.in);\n        double n=sc.nextDouble();\n        char type=sc.next().charAt(0);\n        MarathonRunner mr=new MarathonRunner(n,type);\n        mr.convert();\n    }\n}"
  },
  {
    "question": "You are tasked with developing a program to check for perfect numbers or Armstrong numbers. Additionally, the program should be able to handle a range of numbers to check for both types of numbers. The program should perform the following tasks based on user input.",
    "explanation": "--NA--",
    "answer": "// You are using Java\nimport java.util.*;\nclass Main\n{\n    public static boolean checkPerfect(int n)\n    {\n        int perfsum=0;\n        for(int i=1;i<n;i++)\n        {\n            if(n%i==0)\n            {\n                perfsum+=i;\n            }\n        }\n        return perfsum==n;\n    }\n    public static boolean checkArmstrong(int n)\n    {\n        int length=0;\n        int temp1=n,temp2=n;\n        while(temp1>0)\n        {\n            temp1/=10;\n            length++;\n        }\n        int armsum=0;\n        int rem=0;\n        while(temp2>0)\n        {\n            rem=temp2%10;\n            temp2/=10;\n            armsum+=Math.pow(rem,length);\n        }\n        return armsum==n;\n    }\n    public static void main(String[] args)\n    {\n        Scanner sc=new Scanner(System.in);\n        String s=sc.next();\n        if(s.equals(\"perfect\"))\n        {\n            int n=sc.nextInt();\n            if(checkPerfect(n))\n            {\n                System.out.println(n+\" is a perfect number.\");\n            }\n            else\n            {\n                System.out.println(n+\" is not a perfect number.\");\n            }\n        }\n        else if(s.equals(\"armstrong\"))\n        {\n            int n=sc.nextInt();\n            if(checkArmstrong(n))\n            {\n                System.out.println(n+\" is an Armstrong number.\");\n            }\n            else\n            {\n                System.out.println(n+\" is not an Armstrong number.\");\n            }\n        }\n        else if(s.equals(\"range\"))\n        {\n            int start=sc.nextInt();\n            int end=sc.nextInt();\n            for(int i=start;i<=end;i++)\n            {\n                if(checkPerfect(i))\n                {\n                    System.out.println(i+\" is a perfect number.\");\n                }\n                if(checkArmstrong(i))\n                {\n                    System.out.println(i+\" is an Armstrong number.\");\n                }\n            }\n        }\n        else\n        {\n            System.out.println(\"Invalid\");\n        }\n    }\n}"
  },
  {
    "question": "Reema, an environmental enthusiast, is conducting research on forest ecosystems. She needs a program to calculate the annual rainfall for different forest areas.",
    "explanation": "--NA--",
    "answer": "// You are using Java\nimport java.util.Scanner;\nclass Forest\n{\n    double s,srf,l,b,rrf;\n    public Forest(double s,double srf)\n    {\n        this.s=s;\n        this.srf=srf;\n    }\n    public Forest(double l,double b,double rrf)\n    {\n        this.l=l;\n        this.b=b;\n        this.rrf=rrf;\n    }\n    public void sqrAnnRain()\n    {\n        System.out.printf(\"%.2f\",s*s*srf);\n        System.out.println(\" mm\");\n    }\n    public void rectAnnRain()\n    {\n        System.out.printf(\"%.2f\",l*b*rrf);\n        System.out.println(\" mm\");\n    }\n}\nclass Main\n{\n    public static void main(String[] args)\n    {\n        Scanner sc=new Scanner(System.in);\n        double s=sc.nextDouble();\n        double srf=sc.nextDouble();\n        double l=sc.nextDouble();\n        double b=sc.nextDouble();\n        double rrf=sc.nextDouble();\n        Forest f1=new Forest(s,srf);\n        Forest f2=new Forest(l,b,rrf);\n        f1.sqrAnnRain();\n        f2.rectAnnRain();\n    }\n}"
  },
  {
    "question": "You are tasked with creating a program to calculate the speed of highway drivers based on the distance travelled and the time taken.",
    "explanation": "--NA--",
    "answer": "// You are using Java-17version \nimport java.util.Scanner;\nclass HighwayDriver\n{\n    private double distance;\n    private double time;\n    public HighwayDriver(double distance,double hours,double minutes)\n    {\n        this.distance=distance;\n        this.time=hours+minutes/60;\n    }\n    public HighwayDriver(double distance,double hours)\n    {\n        this.distance=distance;\n        this.time=hours;\n    }\n    public void speed()\n    {\n        System.out.printf(\"%.2f\",distance/time);\n        System.out.println(\" mph\");\n    }\n}\nclass Main\n{\n    public static void main(String[] args)\n    {\n        Scanner sc=new Scanner(System.in);\n        double d1=sc.nextDouble();\n        double h1=sc.nextDouble();\n        double m=sc.nextDouble();\n        double d2=sc.nextDouble();\n        double h2=sc.nextDouble();\n        HighwayDriver hd1=new HighwayDriver(d1,h1,m);\n        HighwayDriver hd2=new HighwayDriver(d2,h2);\n        hd1.speed();\n        hd2.speed();\n    }\n}"
  },
  {
    "question": "Arjun is working on a math project and needs a program to find the average (mean) of two types of numbers: whole numbers (integers) and numbers with decimal points (doubles). He wants to write a program but is having trouble with a concept called 'constructor overloading.' Arjun needs your help to write a program.",
    "explanation": "--NA--",
    "answer": "// You are using Java\nimport java.util.Scanner;\nclass Average\n{\n    int[] arr1;\n    double[] arr2;\n    Average(int[] arr)\n    {\n        this.arr1=arr;\n    }\n    Average(double[] arr)\n    {\n        this.arr2=arr;\n    }\n    public void intMean()\n    {\n        double sum=0;\n        for(int i=0;i<arr1.length;i++)\n        {\n            sum+=arr1[i];\n        }\n        double mean=sum/arr1.length;\n        System.out.printf(\"%.2f\\n\",mean);\n    }\n    public void doubMean()\n    {\n        double sum=0;\n        for(int i=0;i<arr2.length;i++)\n        {\n            sum+=arr2[i];\n        }\n        double mean=sum/arr2.length;\n        System.out.printf(\"%.2f\\n\",mean);\n    }\n}\nclass Main\n{\n    public static void main(String[] args)\n    {\n        Scanner sc=new Scanner(System.in);\n        int n=sc.nextInt();\n        int[] arr1=new int[n];\n        double[] arr2=new double[n];\n        for(int i=0;i<n;i++)\n        {\n            arr1[i]=sc.nextInt();\n        }\n        for(int i=0;i<n;i++)\n        {\n            arr2[i]=sc.nextDouble();\n        }\n        Average avg1=new Average(arr1);\n        Average avg2=new Average(arr2);\n        avg1.intMean();\n        avg2.doubMean();\n    }\n}"
  }
]
