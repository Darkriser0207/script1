[
  {
    "question": "Arun has been assigned the task of writing a program that accepts user input for an Integer and a Character. The program should then use wrapper classes to convert these inputs into their corresponding primitive types (int, and char) and display the results.",
    "explanation": "--NA--",
    "answer": "class OutputPrinter {\n    public void printValues(Integer myInt, Character myChar) {\n        int primitiveInt = myInt.intValue();\n        char primitiveChar = myChar.charValue();\n        System.out.println(\"Integer Value: \" + primitiveInt);\n        System.out.println(\"Character Value: \" + primitiveChar);\n    }\n}"
  },
  {
    "question": "Sneha is learning Java and is experimenting with autoboxing and unboxing concepts. She has a list of integers, and she wants to convert them into a list of Integer objects using autoboxing. After that, she needs to print the sum of the elements using unboxing.",
    "explanation": "--NA--",
    "answer": "import java.util.List;\nclass Solution {\n    public static int calculateSum(List<Integer> list) {\n        int sum = 0;\n        for (Integer num : list) {\n            sum += num;\n        }\n        return sum;\n    }\n}"
  },
  {
    "question": "Arun has been tasked with demonstrating the use of wrapper classes. His task is to accept a string input from the user, which represents a number, and convert it to the corresponding integer primitive type using the Integer wrapper class.",
    "explanation": "--NA--",
    "answer": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        String str = scanner.nextLine();\n        Integer myInt = Integer.valueOf(str);\n        System.out.println(\"Integer Value: \" + myInt.intValue());\n        scanner.close();\n    }\n}"
  },
  {
    "question": "Design a Java program to demonstrate the use of autoboxing (converting primitive types to their corresponding wrapper classes) and unboxing (converting wrapper classes back to primitive types). The program should allow the user to enter primitive values and display their equivalent wrapper class objects and vice versa.",
    "explanation": "--NA--",
    "answer": "import java.util.Scanner;\n\nclass AutoboxingUnboxingDemo {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int intPrimitive = Integer.parseInt(sc.nextLine());\n        double doublePrimitive = Double.parseDouble(sc.nextLine());\n        char charPrimitive = sc.nextLine().charAt(0);\n        boolean booleanPrimitive = Boolean.parseBoolean(sc.nextLine());\n\n        Integer intWrapper = intPrimitive;\n        Double doubleWrapper = doublePrimitive;\n        Character charWrapper = charPrimitive;\n        Boolean booleanWrapper = booleanPrimitive;\n\n        System.out.println(\"Autoboxing:\");\n        System.out.println(\"Integer wrapper: \" + intWrapper);\n        System.out.println(\"Double wrapper: \" + doubleWrapper);\n        System.out.println(\"Character wrapper: \" + charWrapper);\n        System.out.println(\"Boolean wrapper: \" + booleanWrapper);\n\n        int unboxedInt = intWrapper;\n        double unboxedDouble = doubleWrapper;\n        char unboxedChar = charWrapper;\n        boolean unboxedBoolean = booleanWrapper;\n\n        System.out.println(\"Unboxing:\");\n        System.out.println(\"Primitive int: \" + unboxedInt);\n        System.out.println(\"Primitive double: \" + unboxedDouble);\n        System.out.println(\"Primitive char: \" + unboxedChar);\n        System.out.print(\"Primitive boolean: \" + unboxedBoolean);\n        sc.close();\n    }\n}"
  },
  {
    "question": "Aman wants to create a simple calculator that accepts a single numerical value as a String, converts it into an Integer using Javaâ€™s Wrapper Class, and performs the following operations:",
    "explanation": "--NA--",
    "answer": "import java.util.Scanner;\nclass Solution {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        String input = scanner.nextLine();\n        int number = Integer.parseInt(input);\n        int square = number * number;\n        int cube = number * number * number;\n        double squareRoot = Math.sqrt(number);\n        System.out.printf(\"%d %d %.2f\", square, cube, squareRoot);\n    }\n}"
  },
  {
    "question": "Create a program that performs basic arithmetic operations (addition, subtraction, multiplication, and division) on two numbers provided as input by the user. The program should handle both integers and decimal numbers, ensuring that all results are displayed as double values rounded to two decimal places.",
    "explanation": "--NA--",
    "answer": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        String input1 = sc.nextLine();\n        String input2 = sc.nextLine();\n\n        Number num1, num2;\n\n        if (input1.contains(\".\") || input2.contains(\".\")) {\n            num1 = Double.valueOf(input1); \n            num2 = Double.valueOf(input2); \n        } else {\n            num1 = Integer.valueOf(input1); \n            num2 = Integer.valueOf(input2); \n        }\n\n        double number1 = num1.doubleValue();\n        double number2 = num2.doubleValue();\n\n        System.out.printf(\"%.2f\\n\", number1 + number2);  \n        System.out.printf(\"%.2f\\n\", number1 - number2);  \n        System.out.printf(\"%.2f\\n\", number1 * number2);  \n        System.out.printf(\"%.2f\\n\", number1 / number2); \n\n        sc.close();\n    }\n}"
  },
  {
    "question": "Aarav is learning about Wrapper Classes and Autoboxing in Java. His mentor gives him a task to store a character and a byte value using their wrapper classes and then retrieve their original (primitive) values. Help Aarav by writing a program that demonstrates autoboxing and unboxing using Character and Byte wrapper classes.",
    "explanation": "--NA--",
    "answer": "import java.util.Scanner;\nclass Solution {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        char character = scanner.next().charAt(0);\n        byte byteValue = scanner.nextByte();\n        \n        Character characterObject = character;\n        Byte byteObject = byteValue;\n        \n        System.out.println(\"Displaying values of Wrapper class objects:\");\n        System.out.println(\"Character object:  \" + characterObject);\n        System.out.println(\"Byte object:  \" + byteObject);\n        \n        System.out.println(\"Displaying unwrapped values:\");\n        System.out.println(\"char value: \" + characterObject.charValue());\n        System.out.println(\"byte value: \" + byteObject.byteValue());\n    }\n}"
  }
]
